// Generated by view binder compiler. Do not edit!
package edu.uci.ics.fabflixmobile.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import edu.uci.ics.fabflixmobile.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SinglemovieActivityBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button homeButton;

  @NonNull
  public final TextView singleDirector;

  @NonNull
  public final TextView singleGenres;

  @NonNull
  public final TextView singleStars;

  @NonNull
  public final TextView singleTitle;

  @NonNull
  public final TextView singleYear;

  private SinglemovieActivityBinding(@NonNull LinearLayout rootView, @NonNull Button homeButton,
      @NonNull TextView singleDirector, @NonNull TextView singleGenres,
      @NonNull TextView singleStars, @NonNull TextView singleTitle, @NonNull TextView singleYear) {
    this.rootView = rootView;
    this.homeButton = homeButton;
    this.singleDirector = singleDirector;
    this.singleGenres = singleGenres;
    this.singleStars = singleStars;
    this.singleTitle = singleTitle;
    this.singleYear = singleYear;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SinglemovieActivityBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SinglemovieActivityBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.singlemovie_activity, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SinglemovieActivityBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.homeButton;
      Button homeButton = rootView.findViewById(id);
      if (homeButton == null) {
        break missingId;
      }

      id = R.id.single_director;
      TextView singleDirector = rootView.findViewById(id);
      if (singleDirector == null) {
        break missingId;
      }

      id = R.id.single_genres;
      TextView singleGenres = rootView.findViewById(id);
      if (singleGenres == null) {
        break missingId;
      }

      id = R.id.single_stars;
      TextView singleStars = rootView.findViewById(id);
      if (singleStars == null) {
        break missingId;
      }

      id = R.id.single_title;
      TextView singleTitle = rootView.findViewById(id);
      if (singleTitle == null) {
        break missingId;
      }

      id = R.id.single_year;
      TextView singleYear = rootView.findViewById(id);
      if (singleYear == null) {
        break missingId;
      }

      return new SinglemovieActivityBinding((LinearLayout) rootView, homeButton, singleDirector,
          singleGenres, singleStars, singleTitle, singleYear);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
